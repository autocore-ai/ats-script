{"name": "test_6[6*9-54]", "status": "skipped", "statusDetails": {"message": "ValueError: invalid truth value 'true  # 可以让那些标记为@pytest.mark.xfail但实际通过显示xpass的测试用例被报告为失败'", "trace": "self = <_pytest.config.Config object at 0x7f268cee8978>, name = 'xfail_strict'\n\n    def getini(self, name: str):\n        \"\"\" return configuration value from an :ref:`ini file <inifiles>`. If the\n        specified name hasn't been registered through a prior\n        :py:func:`parser.addini <_pytest.config.argparsing.Parser.addini>`\n        call (usually from a plugin), a ValueError is raised. \"\"\"\n        try:\n>           return self._inicache[name]\nE           KeyError: 'xfail_strict'\n\nvenv/lib/python3.6/site-packages/_pytest/config/__init__.py:1075: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x7f268a7082f0>\nwhen = 'call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(cls, func, when, reraise=None) -> \"CallInfo\":\n        #: context of invocation: one of \"setup\", \"call\",\n        #: \"teardown\", \"memocollect\"\n        start = time()\n        excinfo = None\n        try:\n>           result = func()\n\nvenv/lib/python3.6/site-packages/_pytest/runner.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.6/site-packages/_pytest/runner.py:217: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nvenv/lib/python3.6/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nvenv/lib/python3.6/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nvenv/lib/python3.6/site-packages/pluggy/manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nvenv/lib/python3.6/site-packages/_pytest/runner.py:143: in pytest_runtest_call\n    raise e\nvenv/lib/python3.6/site-packages/_pytest/runner.py:135: in pytest_runtest_call\n    item.runtest()\nvenv/lib/python3.6/site-packages/_pytest/python.py:1477: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\nvenv/lib/python3.6/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nvenv/lib/python3.6/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nvenv/lib/python3.6/site-packages/pluggy/manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nvenv/lib/python3.6/site-packages/_pytest/skipping.py:102: in pytest_pyfunc_call\n    check_strict_xfail(pyfuncitem)\nvenv/lib/python3.6/site-packages/_pytest/skipping.py:118: in check_strict_xfail\n    strict_default = pyfuncitem.config.getini(\"xfail_strict\")\nvenv/lib/python3.6/site-packages/_pytest/config/__init__.py:1077: in getini\n    self._inicache[name] = val = self._getini(name)\nvenv/lib/python3.6/site-packages/_pytest/config/__init__.py:1106: in _getini\n    return bool(_strtobool(value.strip()))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nval = 'true  # 可以让那些标记为@pytest.mark.xfail但实际通过显示xpass的测试用例被报告为失败'\n\n    def _strtobool(val):\n        \"\"\"Convert a string representation of truth to true (1) or false (0).\n    \n        True values are 'y', 'yes', 't', 'true', 'on', and '1'; false values\n        are 'n', 'no', 'f', 'false', 'off', and '0'.  Raises ValueError if\n        'val' is anything else.\n    \n        .. note:: copied from distutils.util\n        \"\"\"\n        val = val.lower()\n        if val in (\"y\", \"yes\", \"t\", \"true\", \"on\", \"1\"):\n            return 1\n        elif val in (\"n\", \"no\", \"f\", \"false\", \"off\", \"0\"):\n            return 0\n        else:\n>           raise ValueError(\"invalid truth value {!r}\".format(val))\nE           ValueError: invalid truth value 'true  # 可以让那些标记为@pytest.mark.xfail但实际通过显示xpass的测试用例被报告为失败'\n\nvenv/lib/python3.6/site-packages/_pytest/config/__init__.py:1232: ValueError"}, "parameters": [{"name": "test_input", "value": "'6*9'"}, {"name": "expected", "value": "54"}], "start": 1595575203039, "stop": 1595575203039, "uuid": "ccba834d-af05-424d-bc2a-b120ef57553e", "historyId": "fc80737bf8ff8a01e31a426fb2001d5c", "testCaseId": "7b893e477efdf632f7a0c1121dfc8acf", "fullName": "testcases.auto_test#test_6", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "auto_test"}, {"name": "host", "value": "duan-XPS-15-9570"}, {"name": "thread", "value": "10394-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.auto_test"}]}